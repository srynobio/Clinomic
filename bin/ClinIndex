#!/usr/bin/perl
use warnings;
use strict;
use IO::File;

our $VERSION = (0.0.1);

# Run times: bgzip is the bottleneck.
# standard
# time: 13m30.796s
# parallel
# time: 11m33.998s



#### NOTES ####
# maybe add option to switch between curl and wget


## Directory check ##
## And add sub directories.
unless ( -d '../data' ) { die "\n../data directory needed to run this script.\n" }
`mkdir ../data/GFF`;
`mkdir ../data/dbSNP`;
`mkdir ../data/ClinVar`;
`mkdir ../data/NCBI`;
`mkdir ../data/GTF`;

# check if user had parallel installed 
my $parallel = `parallel --version`;
#my $parallel = '0'; #system("parallel --version");

if ($parallel) {
        # I/O
        my $wgetFH = IO::File->new('wgetList', 'w');
        my $gunsFH = IO::File->new('gunsList', 'w');
        my $bgFH   = IO::File->new('bgList', 'w');
        my $tabFH  = IO::File->new('tabList', 'w');
                
        # wget section
        {
                # list of all the files needed.
                # Updated location here if needed.
                my @wgetItems = (
                        "wget ftp://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/GFF/ref_GRCh37*level.gff3.gz",
                        "wget ftp://ftp.ncbi.nlm.nih.gov/snp/organisms/human_9606/VCF/00-All.vcf.gz",
                        "wget ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/vcf/clinvar_2012*.vcf.gz",
                        "wget ftp://ftp.ncbi.nih.gov/gene/DATA/gene_info.gz",
                        "wget ftp://ftp.ncbi.nih.gov/gene/DATA/gene2refseq.gz",
                        #"wget ftp://ftp.ensembl.org/pub/release-69/gtf/homo_sapiens/Homo_sapiens.GRCh37.69.gtf.gz",
                        # grep -P '^(\d+)|^X|^Y' Homo_sapiens.GRCh37.69.gtf > Homo_sapiens.gtf
                        # sort -k1,1 -k4,4n Homo_sapiens.gtf | bgzip -c > Homo_sapiens.gtf.gz
                        # tabix Homo_sapiens.gtf.gz
                        # mv Homo_sapiens.* ../data/GTF/
                );
                
                foreach ( @wgetItems ){
                        print $wgetFH $_, "\n";
                }
                
                # use parallel to download .gz files.
                warn "{ClinIndex} Downloading needed gz files\n";
                `cat wgetList | parallel -j+5`;
                
                # rename to make future files easy to work with
                system("mv ref_GRCh37*level.gff3.gz ref_GRCh37.gff3.gz");
                system("mv clinvar_*.vcf.gz clinvar_sigfile.vcf.gz");
        }
        
        # Unzipping section
        {
                # glob fetch current directory info.
                foreach my $i ( <*> ){
                        if ( $i =~ /.gz$/ ) {
                                print $gunsFH "gunzip $i\n";
                        }
                }
                
                # use parallel to gunzip files.
                warn "{ClinIndex} Unzipping files\n";
                `cat gunsList | parallel -j+5`;
        }
        
        # Run functions to updated needed files.
        {
                warn "{ClinIndex} Updating files\n";
                system("grep -P '^9606' gene2refseq > 01humanid");
                system("grep -P '^9606' gene_info > gene_info9606");
                system("grep -v '^#' clinvar_sigfile.vcf > clinvar_sig.vcf");
        
        
                updateGFF();
                updateSNP();
                symbolSwitch();
        }
        
        # bgzip and tabix section
        {
                my @bgzips = (
                        "bgzip -c Updated.ref_GRCh37.gff3 > Updated.ref_GRCh37.gff3.gz",
                        "bgzip -c Updated.00-All.vcf > Updated.00-All.vcf.gz",
                        "bgzip -c clinvar_sig.vcf > clinvar_sig.vcf.gz",
                );
                
                foreach ( @bgzips ){
                        print $bgFH $_, "\n";
                }
                
                # use parallel to run bgzip
                warn "{ClinIndex} Running bgzip\n";
                `cat bgList | parallel -j+3`;
        }
        
        # make tabix files of all bgzip files
        {
                my @tabixs = (
                        "tabix -s1 -b4 -e5 Updated.ref_GRCh37.gff3.gz",
                        "tabix -s1 -b2 -e2 Updated.00-All.vcf.gz",
                        "tabix -s1 -b2 -e2 clinvar_sig.vcf.gz",
                );
                
                foreach ( @tabixs ){
                        print $tabFH $_, "\n";
                }
                warn "{ClinIndex} Running tabix\n";
                `cat tabList | parallel -j+3`;
        }
        
        # Move files and clean up
        `mv Updated.00-All.vcf* 00-All.vcf ../data/dbSNP/`;
        `mv gene_info9606 UpdatedRefSeq.txt gene2refseq ../data/NCBI/`;
        `mv Updated.ref_GRCh37.gff3* ref_GRCh37.gff3 ../data/GFF/`;
        `mv clinvar_sig.vcf* ../data/ClinVar/`;
        `rm bgList gunsList tabList wgetList 01humanid gene_info clinvar_sigfile.vcf`;

        $wgetFH->close;
        $gunsFH->close;
        $bgFH->close;
        $tabFH->close;
}

else {
        ## GFF ##
        print "{ClinIndex} Downloading and unpacking GFF file.\n";
        system("wget ftp://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/GFF/ref_GRCh37*level.gff3.gz");
        system("mv ref_GRCh37*level.gff3.gz ref_GRCh37.gff3.gz");
        print "{ClinIndex} Unzipping GFF file\n";
        system("gunzip ref_GRCh37.gff3.gz");
        print "{ClinIndex} creating GFF index file of only gene models.\n";
        updateGFF();
        `bgzip -c Updated.ref_GRCh37.gff3 > Updated.ref_GRCh37.gff3.gz`;
        `tabix -s1 -b4 -e5 Updated.ref_GRCh37.gff3.gz`;
        `rm ref_GRCh37.gff3 Updated.ref_GRCh37.gff3`;
        `mv Updated.ref_GRCh37.gff3.gz* ../data/GFF`;
        
        ## DBSNP ##
        print "{ClinIndex} Downloading and unpacking dbSNP file.\n";
        system("wget ftp://ftp.ncbi.nlm.nih.gov/snp/organisms/human_9606/VCF/00-All.vcf.gz ");
        print "{ClinIndex} Unzipping dbSNP file\n";
        system("gunzip 00-All.vcf.gz");
        print "{ClinIndex} Updating dbSNP file.\n";
        updateSNP();
        print "{ClinIndex} Indexing dbSNP file.\n";
        `bgzip -c Updated.00-All.vcf > Updated.00-All.vcf.gz`;
        `tabix -s1 -b2 -e2 Updated.00-All.vcf.gz`;
        `rm 00-All.vcf Updated.00-All.vcf`;
        `mv Updated.00-All.vcf.gz* ../data/dbSNP`;
        
        ### CLINVAR ##
        print "{ClinIndex} Downloading ClinVar files.\n";
        system("wget ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/vcf/clinvar_2012*.vcf.gz");
        system("mv clinvar_*.vcf.gz clinvar_sigfile.vcf.gz");
        system("gunzip clinvar_sigfile.vcf.gz");
        system("grep -v '^#' clinvar_sigfile.vcf > clinvar_sig.vcf");
        system("bgzip -c clinvar_sig.vcf > clinvar_sig.vcf.gz");
        system("tabix -s1 -b2 -e2 clinvar_sig.vcf.gz");
        `mv clinvar_sig.vcf* ../data/ClinVar/`;
        `rm clinvar_sigfile.vcf`;
        
        ## NCBI ##
        print "{ClinIndex} Downloading and NCBI files.\n";
        system("wget ftp://ftp.ncbi.nih.gov/gene/DATA/gene_info.gz");
        system("wget ftp://ftp.ncbi.nih.gov/gene/DATA/gene2refseq.gz");
        print "{ClinIndex} Unzipping NCBI files.\n";
        system("gunzip gene_info.gz");
        system("gunzip gene2refseq.gz");
        # before moving make needed file changes.
        print "{ClinIndex} Converting NCBI files to work with Clinomic.\n";
        system("grep -P '^9606' gene_info > gene_info9606");
        system( q/grep -P '^9606' gene_info |awk -F '\t' '{print $2 "\t" $3 }' > 00id+symbol/ );
        system( q/grep -P '^9606' gene2refseq >01humanid/ );
        # sub to make needed switch to file
        symbolSwitch();
        `mv UpdatedRefSeq.txt gene_info9606 gene2refseq ../data/NCBI`;
        `rm 00id+symbol 01humanid gene_info`;
}

#------------------------------------------------------------------------------
#----------------------------- SUBS -------------------------------------------
#------------------------------------------------------------------------------

sub symbolSwitch {

    my $geneFH = IO::File->new('gene_info9606', 'r') || die "Can't open gene_info file\n";
    my $idFH  = IO::File->new('01humanid', 'r') || die "Can't open 01humanid file\n";
    my $outFH = IO::File->new('UpdatedRefSeq.txt', 'w') || die "Can't make write file??\n";
    
    my %sym;
    foreach my $i (<$geneFH>){
            chomp $i;
            
            my @columns = split/\t/, $i;
            $sym{ $columns[1] } = $columns[2];
    }

    foreach my $t (<$idFH>) {
            chomp $t;
    
            my @items = split/\t/, $t;
    
            if ($sym{$items[1]}){
                    $items[1] = $sym{$items[1]};
            }
    
            my $refseq = join("\t", @items);
            print $outFH $refseq, "\n";
    }
    $geneFH->close;
    $idFH->close;
    $outFH->close;
}

#------------------------------------------------------------------------------

sub updateGFF {
    
    my $inFH  = IO::File->new('ref_GRCh37.gff3', 'r') || die "please enter ref file\n";
    my $outFH = IO::File->new('Updated.ref_GRCh37.gff3', 'w') || die "Can't create Update.ref.model file\n";
    
    foreach (<$inFH>){
            chomp $_;
            
            if ( $_ !~ /^NC_/) { next }
            if ( $_ =~ /region/ ) { next }

            #taking out mito atm
            if ($_ =~ /^NC_012920.1/) { next }
            
            $_ =~ s/^NC_(0){5,5}(\d)\.(\d+)\t(.*)$/chr$2\t$4/g;
            $_ =~ s/^NC_(0){4,4}(\d+)\.(\d+)\t(.*)$/chr$2\t$4/g;
            
            my @genes = grep { $_ =~ /\tgene\t/ }$_;
            foreach (@genes) {
                    print $outFH $_, "\n";
            }
    }
    $outFH->close;
}

#------------------------------------------------------------------------------

sub updateSNP {
    
    my $inFH  = IO::File->new('00-All.vcf', 'r') || die "Please enter dbSNP file\n";
    my $outFH = IO::File->new('Updated.00-All.vcf', 'w') || die "Can't create Update.00-All.vcf file\n";
    
    foreach (<$inFH>){
        chomp $_;
        
        if ( $_ =~ /^#{1,}/ ) { next }
        $_ =~ s/^/chr/;
        
        print $outFH $_, "\n";
    }
}

#------------------------------------------------------------------------------
